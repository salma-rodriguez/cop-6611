\section{Evaluation}

As part of the evaluation of our prototype, we measure the
impact that the replication mechanism has on system. For 
our baseline configuration we test the performance of the
original version of dm-cache that uses a local SSD cache
only. We compare this to overhead produced by two configurations
of our versions of replicator-dmc. The first of these 
configurations uses the synchrounous version of the dm_io()
function. We decide to test this function since it performs
writes to both the local and peer cache devices in a synchrounous
manner, and thus it's more reliable, although at a performance cost.
The other configuration that we test is the version of dm-cache 
that uses the asynchronous version of the dm_io() function. This
function does not block so it has a chance to bundle I/O requests
and provide better performance, however, at the risk of providing
less reliability. 

n{figure*}[t]
  \centering \includegraphics[width=\linewidth]{ writes.png}
  \caption{ Performance for write operations on three different dm-cache configurations }
  \label{fig:writes}
\end{figure*}


\subsection{Evaluation Setup}

In order to evaluate our system we require at least three machines;
one for each of the roles mentioned in the design section. Unfortunately,
due to time constraints we weren't able to acquire three physical
nodes to perform our tests, so we decided to run our benchmarks in
in virtual machines. There is one virtual machine for each of our
roles: a replicator, a replica client, and a storage server. For the first
configuration we only used the replicator VM which ran a version
of the original dm-cache. The second and third configuration were
setup so that both replicator and replica client had access to a
storage device in the storage server VM. The replicator VM would
then access the replica cache device which was made available by 
the replica client VM.

All configurations of dm-cache ran using the same set of parameters.
The capacity of the source device 5 GB and the cache devices 
(both local and replica) are of size 1 GB. The data transfer
accross all machines is done through the iSCSI protocol. The tests 
we performed were done using the IOzone benchmarking tool.
We used it to write a 128 MB file on the dm-cache client running
on the replicator VM. 



\subsection{Results}
We gathered data for cache write miss operations
which are one of the cases in which dirty data is written to the
cache devices. Figure~\ref{fig:writes} shows the performance for
each of the configurations.

As we can see the results show that in comparison with baseline
case, the configuration of dm-cache that uses the asynchronous
dm_io operation performs slower, a reduction in 40% in performance.
As for the synchronous dm_io function, the overhead in comparison
to the original configuration results in a reduction in performance
by up to 65%.

There are several causes behind the overhead of the replicating
configurations of dm-cache. Besides having to write to more than
one device, the reduction in performance for asynchrnous operations
is most likely caused by the iSCSI communication layer. In other
words, in order for the data to be replicated to another peer
client, it must travel as a bio to the iSCSI layer, and then be
converted to an object which can be transferred across a TCP/IP
connection, and then this object must be converted back to a bio
which must be handled by the replica client. By finding another
more optimal way to replicate data accross clients, this overhead
could be reduced. For the synchronous dm_io operations, the previous
overhead still applies, but in addition, the slower throughoput
is a direct result of the behavior of synchronous operations
which will block until each request completes; one at a time.

Lastly, as part of the evaluation, we should state that we
are aware that running performance benchmarks in a virtualized
environment is not a good representation of the real physical
hardware. Nevertheless, we believe that a similar behavior wouldi
be observed if our tests were run in physical hardware.


\label{evaluation}
